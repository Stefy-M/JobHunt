{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/company-add/company-add.component.ts","webpack:///src/app/components/company-add/company-add.component.html","webpack:///src/app/components/company-list/company-list.component.ts","webpack:///src/app/components/company-list/company-list.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/job.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","AppModule","forRoot","declarations","imports","providers","bootstrap","CompanyAddComponent","jobService","flashMessage","validateService","selectedStatus","job","company","jobTitle","location","notes","link","status","validateJob","show","cssClass","timeout","addJob","subscribe","data","onJobSubmit","CompanyListComponent","authservice","jobs","getJobs","updateUser","getUser","JSON","parse","localStorage","getItem","username","res","obj","user","body","numOfJobs","jobsList","length","setItem","stringify","jobDetail","event","displayDialog","newJob","selectedJob","updateJob","companyName","deleteJob","onRowSelect","save","LoginComponent","authService","router","password","authenticateUser","success","navigate","storeUserData","token","msg","toString","onLoginSubmit","NavbarComponent","logout","ProfileComponent","getProfile","profile","err","console","log","RegisterComponent","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuard","loggedIn","providedIn","AuthService","http","headers","append","post","observe","pipe","authToken","userName","get","clear","loadToken","Authorization","jwtHelper","undefined","isTokenExpired","JobService","put","jobObject","ValidateService","re","test","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACA;;AACE;;AACA;;AAEF;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPziBuD;AAEG;;;AAQ1D,QAAMC,SAAS,GAAW,CACxB;AAACC,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAE;AAAtB,KADwB,EAExB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE,sFAA7B;AAA8CC,iBAAW,EAAE,CAAC,6DAAD;AAA3D,KAFwB,EAGxB;AAACF,UAAI,EAAE,UAAP;AAAmBC,eAAS,EAAE;AAA9B,KAHwB,EAIxB;AAACD,UAAI,EAAE,aAAP;AAAsBC,eAAS,EAAE,iGAAjC;AAAsDC,iBAAW,EAAE,CAAC,6DAAD;AAAnE,KAJwB,EAKxB;AAACF,UAAI,EAAE,cAAP;AAAuBC,eAAS,EAAE,qGAAlC;AAAwDC,iBAAW,EAAE,CAAC,6DAAD;AAArE,KALwB,CAA1B;;QAwCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,2EAAD,EAAkB,mEAAlB,EAA+B,6DAA/B,EAAyC,iEAAzC,C;AAAoD,gBAlBtD,CACP,uEADO,EAEP,6FAFO,EAGP,6DAAaC,OAAb,CAAqBL,SAArB,CAHO,EAIP,0DAJO,EAKP,sEALO,EAMP,6EAAoBK,OAApB,EANO,EAOP,kEAPO,EAQP,6FARO,EASP,0DATO,EAUP,4DAVO,EAWP,4DAXO,EAYP,0EAZO,EAaP,gEAbO,EAcP,sEAdO,CAkBsD;;;;0HAGpDD,S,EAAS;AAAA,uBA7BlB,2DA6BkB,EA5BlB,mFA4BkB,EA3BlB,gFA2BkB,EA1BlB,yFA0BkB,EAzBlB,sFAyBkB,EAxBlB,iGAwBkB,EAvBlB,qGAuBkB;AAvBE,kBAGpB,uEAHoB,EAIpB,6FAJoB,EAIG,4DAJH,EAMpB,0DANoB,EAOpB,sEAPoB,EAOJ,4EAPI,EASpB,kEAToB,EAUpB,6FAVoB,EAWpB,0DAXoB,EAYpB,4DAZoB,EAapB,4DAboB,EAcpB,0EAdoB,EAepB,gEAfoB,EAgBpB,sEAhBoB;AAuBF,O;AAPD,K;;;;;sEAORA,S,EAAS;cA/BrB,sDA+BqB;eA/BZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,gFAHY,EAIZ,yFAJY,EAKZ,sFALY,EAMZ,iGANY,EAOZ,qGAPY,CADN;AAURC,iBAAO,EAAE,CACP,uEADO,EAEP,6FAFO,EAGP,6DAAaF,OAAb,CAAqBL,SAArB,CAHO,EAIP,0DAJO,EAKP,sEALO,EAMP,6EAAoBK,OAApB,EANO,EAOP,kEAPO,EAQP,6FARO,EASP,0DATO,EAUP,4DAVO,EAWP,4DAXO,EAYP,0EAZO,EAaP,gEAbO,EAcP,sEAdO,CAVD;AA4BRG,mBAAS,EAAE,CAAC,2EAAD,EAAkB,mEAAlB,EAA+B,6DAA/B,EAAyC,iEAAzC,CA5BH;AA6BRC,mBAAS,EAAE,CAAC,2DAAD;AA7BH,S;AA+BY,Q;;;;;;;;;;;;;;;;;;ACnEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaC,mB;AASX,mCAAoBC,UAApB,EACoBC,YADpB,EAEoBC,eAFpB,EAEsD;AAAA;;AAFlC,aAAAF,UAAA,GAAAA,UAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAJpB,aAAAC,cAAA,GAAyB,SAAzB;AAIyD;;;;mCAE9C,CAEV;;;sCAEU;AAAA;;AACT,cAAMC,GAAG,GAAG;AACVC,mBAAO,EAAG,KAAKA,OADL;AAEVC,oBAAQ,EAAE,KAAKA,QAFL;AAGVC,oBAAQ,EAAE,KAAKA,QAHL;AAIVC,iBAAK,EAAE,KAAKA,KAJF;AAKVC,gBAAI,EAAE,KAAKA,IALD;AAMVC,kBAAM,EAAE,KAAKP;AANH,WAAZ;;AASA,cAAI,CAAC,KAAKD,eAAL,CAAqBS,WAArB,CAAiCP,GAAjC,CAAL,EAA4C;AAE1C,iBAAKH,YAAL,CAAkBW,IAAlB,CAAuB,sCAAvB,EAA+D;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAE;AAApC,aAA/D;AAEA,mBAAO,KAAP;AACD;;AAED,eAAKd,UAAL,CAAgBe,MAAhB,CAAuBX,GAAvB,EAA4BY,SAA5B,CAAsC,UAAAC,IAAI,EAAG;AAE3C,gBAAKA,IAAI,IAAI,IAAb,EAAmB;AACjB,mBAAI,CAAChB,YAAL,CAAkBW,IAAlB,CAAuB,0BAAvB,EAAmD;AAACC,wBAAQ,EAAE,eAAX;AAA4BC,uBAAO,EAAE;AAArC,eAAnD;AAED,aAHD,MAGO;AACL,mBAAI,CAACb,YAAL,CAAkBW,IAAlB,CAAuB,sBAAvB,EAA+C;AAACC,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAE;AAApC,eAA/C;AAED;AAGF,WAXD;AAcD;;;;;;;uBAhDUf,mB,EAAmB,iI,EAAA,6I,EAAA,2I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,4hC;AAAA;AAAA;ACZhC;;AAA8D;;AAAa;;AAC3E;;AAAM;AAAA,mBAAY,IAAAmB,WAAA,EAAZ;AAAyB,WAAzB;;AACF;;AACE;;AAAO;;AAAO;;AACd;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACI;;AAAQ;;AAAS;;AACjB;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACA;;AACI;;AAAO;;AAAQ;;AACf;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACA;;AACE;;AAAO;;AAAa;;AACpB;;AAAmC;AAAA;AAAA;;AAA0C;;AAC/E;;AACA;;AACI;;AAAO;;AAAI;;AACX;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACA;;AACI;;AAAO;;AAAM;;AACb;;AACE;;AAAqB;;AAA6D;AAAA;AAAA;;AAA4C;;AAAgB;;AAC9I;;AAAqB;;AAA+D;AAAA;AAAA;;AAA4C;;AAAgB;;AAChJ;;AAAqB;;AAAqE;AAAA;AAAA;;AAA4C;;AAAgB;;AACxJ;;AAEJ;;AACA;;AAEF;;;;AA7BW;;AAAA;;AAIE;;AAAA;;AAIA;;AAAA;;AAI0B;;AAAA;;AAI1B;;AAAA;;AAK6E;;AAAA;;AACE;;AAAA;;AACM;;AAAA;;;;;;;;;sEDfvFnB,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTb,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;;;;;AAGA;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAS;;AACb;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAK;;AACT;;AAAI;;AAAM;;AACV;;AAAI;;AAAI;;AACZ;;;;;;AAGE;;AACE;;AAAI;;AAAe;;AACnB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAa;;AACjB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAY;;AAClB;;;;;;AAPI;;AACE;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAIR;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;AAC3F;;;;;;;;AAOE;;AACE;;AACM;;AACI;;AAAqB;;AAAO;;AAChC;;AACA;;AACI;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAA/B;;AACJ;;AACJ;;AACA;;AACE;;AACI;;AAAqB;;AAAS;;AAClC;;AACA;;AACI;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAhC;;AACJ;;AACF;;AACA;;AACE;;AACI;;AAAqB;;AAAQ;;AACjC;;AACA;;AACI;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAhC;;AACJ;;AACF;;AACA;;AACE;;AACI;;AAAqB;;AAAK;;AAC9B;;AACA;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AACjF;;AACF;;AACA;;AACE;;AACI;;AAAqB;;AAAI;;AAC7B;;AACA;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AACJ;;AACF;;AACA;;AACE;;AACI;;AAAqB;;AAAM;;AAC/B;;AACA;;AACI;;AAAqB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAAgB;;AAChJ;;AAAqB;;AAA+D;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAAgB;;AAClJ;;AAAqB;;AAAqE;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAAgB;;AAC5J;;AACF;;AAEJ;;;;;;AA9C2C;;AAAA;;AAQD;;AAAA;;AAQA;;AAAA;;AAQI;;AAAA;;AAQR;;AAAA;;AAQsD;;AAAA;;AACE;;AAAA;;AACM;;AAAA;;;;;;;;;;QDtE3F+B,oB;AASX,oCAAoBC,WAApB,EACoBnB,YADpB,EAEoBD,UAFpB,EAE4C;AAAA;;AAFxB,aAAAoB,WAAA,GAAAA,WAAA;AACA,aAAAnB,YAAA,GAAAA,YAAA;AACA,aAAAD,UAAA,GAAAA,UAAA;AAA2B;;;;mCAEpC;AACT,cAAI,KAAKqB,IAAL,GAAY,KAAKD,WAAL,CAAiBE,OAAjB,EAAhB,EAA4C;AAC1C,iBAAKC,UAAL;AACD,WAFD,MAEO;AACL,iBAAKtB,YAAL,CAAkBW,IAAlB,CAAuB,sCAAvB,EAA8D;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAE;AAApC,aAA9D;AACD;AACF,S,CAED;;;;qCACU;AAAA;;AACR,eAAKM,WAAL,CAAiBI,OAAjB,CAAyBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,QAAlE,EAA4Eb,SAA5E,CAAsF,UAAAc,GAAG,EAAG;AAC1F,gBAAIC,GAAG,GAAG,EAAV;AACA,gBAAIC,IAAI,GAAG,EAAX;AACAD,eAAG,GAAGD,GAAG,CAACG,IAAV;AACAD,gBAAI,GAAGD,GAAG,CAACC,IAAX;AACAA,gBAAI,CAACE,SAAL,GAAiBF,IAAI,CAACG,QAAL,CAAcC,MAA/B;AACAT,wBAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeN,IAAf,CAA7B;AACA,kBAAI,CAACX,IAAL,GAAYW,IAAI,CAACG,QAAjB;AACD,WARD;AASD;;;kCAEM;AAEL,eAAKI,SAAL,GAAiB,EAAjB;AACA,eAAKtC,YAAL,CAAkBW,IAAlB,CAAuB,kBAAvB,EAA0C;AAACC,oBAAQ,EAAE,eAAX;AAA4BC,mBAAO,EAAE;AAArC,WAA1C;AACA,eAAKS,UAAL;AACD;;;oCAEWiB,K,EAAK;AACf,eAAKD,SAAL,GAAiBC,KAAK,CAACvB,IAAvB;AACA,eAAKwB,aAAL,GAAqB,IAArB;AACA,eAAKlB,UAAL;AAED;;;+BAMG;AACF,cAAMmB,MAAM,GAAG,KAAKC,WAApB;AACA,eAAK3C,UAAL,CAAgB4C,SAAhB,CAA0BF,MAA1B,EAAkC1B,SAAlC;AACA,eAAKyB,aAAL,GAAqB,KAArB;AACA,eAAKlB,UAAL;AAID;;;kCACK;AACJ,cAAMsB,WAAW,GAAG,KAAKF,WAAL,CAAiBtC,OAArC;AACA,cAAMC,QAAQ,GAAG,KAAKqC,WAAL,CAAiBrC,QAAlC;AACA,eAAKN,UAAL,CAAgB8C,SAAhB,CAA0BD,WAA1B,EAAsCvC,QAAtC,EAAgDU,SAAhD;AACA,eAAKyB,aAAL,GAAqB,KAArB;AACA,eAAKlB,UAAL;AACD;;;;;;;uBAnEUJ,oB,EAAoB,mI,EAAA,6I,EAAA,iI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,c;AAAA,0oD;AAAA;AAAA;ACbjC;;AACA;;AAA+B;AAAA,mBAAgB,IAAA4B,WAAA,QAAhB;AAAmC,WAAnC,EAAoC,iBAApC,EAAoC;AAAA;AAAA,WAApC;;AAC7B;;AAGA;;AAUA;;AAUF;;AAKA;;AACA;;AAGE;;AAAkC;AAAA;AAAA;;AAChC;;AAqDA;;AACE;;AACI;;AAAiD;AAAA,mBAAS,eAAT;AAAiB,WAAjB;;AAAkC;;AACnF;;AAAiD;AAAA,mBAAS,IAAAC,IAAA,EAAT;AAAe,WAAf;;AAA8B;;AACnF;;AACF;;AAGF;;;;AA/FO;;AAAA,sFAAqB,WAArB,EAAqB,eAArB,EAAqB,MAArB,EAAqB,CAArB;;AAiCwI;;AAAA;;AAA7G,iGAA6B,aAA7B,EAA6B,KAA7B,EAA6B,YAA7B,EAA6B,IAA7B,EAA6B,OAA7B,EAA6B,IAA7B;;AACL;;AAAA;;;;;;;;;sEDtBlB7B,oB,EAAoB;cAPhC,uDAOgC;eAPtB;AACTjC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAOsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEbjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa6D,c;AAGX,8BAAoBC,WAApB,EACoBC,MADpB,EAEoBlD,YAFpB,EAEwD;AAAA;;AAFpC,aAAAiD,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAlD,YAAA,GAAAA,YAAA;AAAuC;;;;mCAEhD,CACV;;;wCAEY;AAAA;;AAEX,cAAM+B,IAAI,GAAG;AACXH,oBAAQ,EAAE,KAAKA,QADJ;AAEXuB,oBAAQ,EAAE,KAAKA;AAFJ,WAAb;AAKA,eAAKF,WAAL,CAAiBG,gBAAjB,CAAkCrB,IAAlC,EAAwChB,SAAxC,CAAkD,UAAAc,GAAG,EAAG;AACtD,gBAAIb,IAAI,GAAE,EAAV;AACAA,gBAAI,GAAGa,GAAG,CAACG,IAAX;;AAEA,gBAAGhB,IAAI,CAACqC,OAAR,EAAgB;AAEd,oBAAI,CAACH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,UAAD,CAArB;;AACA,oBAAI,CAACL,WAAL,CAAiBM,aAAjB,CAA+BvC,IAAI,CAACwC,KAApC,EAA0CxC,IAAI,CAACe,IAA/C;;AACA,oBAAI,CAAC/B,YAAL,CAAkBW,IAAlB,CAAuBK,IAAI,CAACyC,GAAL,CAASC,QAAT,EAAvB,EAA2C;AAAC9C,wBAAQ,EAAE,eAAX;AAA4BC,uBAAO,EAAE;AAArC,eAA3C;AAGD,aAPD,MAQI;AACF,oBAAI,CAACb,YAAL,CAAkBW,IAAlB,CAAuBK,IAAI,CAACyC,GAAL,CAASC,QAAT,EAAvB,EAA2C;AAAC9C,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAE;AAApC,eAA3C;;AACA,oBAAI,CAACqC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;AAGF,WAlBD;AAsBD;;;;;;;uBAvCUN,c,EAAc,mI,EAAA,uH,EAAA,6I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,wW;AAAA;AAAA;ACT3B;;AAAgE;;AAAK;;AACrE;;AAAM;AAAA,mBAAY,IAAAW,aAAA,EAAZ;AAA2B,WAA3B;;AACF;;AACI;;AAAO;;AAAQ;;AACf;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AAA8C;;AAAM;;AACtD;;;;AAPa;;AAAA;;AAIF;;AAAA;;;;;;;;;sEDCAX,c,EAAc;cAL1B,uDAK0B;eALhB;AACT/D,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACQQ;;AACE;;AAAoD;;AAAM;;AAAsB;;AAAS;;AAAO;;AAClG;;;;AAF6D,4JAAiC,yBAAjC,EAAiC,qEAAjC;;AACxD;;AAAA;;;;;;;;;;AAEL;;AACE;;AAA4D;;AAAQ;;AACtE;;;;AAF6D,4JAAiC,yBAAjC,EAAiC,qEAAjC;;AACxD;;AAAA;;;;;;;;;;AAEL;;AACE;;AAA2D;;AAAO;;AACpE;;;;AAF4D,4JAAiC,yBAAjC,EAAiC,qEAAjC;;AACvD;;AAAA;;;;;;;;;;AAEL;;AACE;;AAA+D;;AAAG;;AACtE;;;;AAF8D,4JAAiC,yBAAjC,EAAiC,qEAAjC;;AACvD;;AAAA;;;;;;;;;;AAEL;;AACI;;AAAgE;;AAAK;;AACzE;;;;AAF4D,4JAAiC,yBAAjC,EAAiC,qEAAjC;;AACrD;;AAAA;;;;;;;;AAKP;;AACI;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAsD;;AAAM;;AACnE;;;;QDlBKyE,e;AAEX,+BAAmBX,WAAnB,EACoBC,MADpB,EAEoBlD,YAFpB,EAEwD;AAAA;;AAFrC,aAAAiD,WAAA,GAAAA,WAAA;AACC,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAlD,YAAA,GAAAA,YAAA;AAAuC;;;;mCAEhD,CACV;;;wCAEe;AAEd,eAAKiD,WAAL,CAAiBY,MAAjB;AACA,eAAK7D,YAAL,CAAkBW,IAAlB,CAAuB,oBAAvB,EAA6C;AAACC,oBAAQ,EAAE,eAAX;AAA4BC,mBAAO,EAAE;AAArC,WAA7C;AACA,eAAKqC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBAfUM,e,EAAe,mI,EAAA,uH,EAAA,6I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,suB;AAAA;AAAA;ACV5B;;AACI;;AAAiC;;AAAO;;AACxC;;AACE;;AACF;;AAEA;;AACE;;AACE;;AAGA;;AAGA;;AAGA;;AAGA;;AAGF;;AAEA;;AACE;;AAGH;;AACD;;AACF;;;;AAvBW;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMD;;AAAA;;;;;;;;;sEDhBCA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT3E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEA;;AACI;;AAAwB;;AAAa;;AACrC;;AACI;;AAA4B;;AAA2B;;AACvD;;AAA4B;;AAAqB;;AACjD;;AAA4B;;AAA8C;;AAE9E;;AACJ;;;;;;AAP4B;;AAAA;;AAEQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDEvB2E,gB;AAIX,gCAAoB3C,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEtC;AAAA;;AAGT,eAAKA,WAAL,CAAiB4C,UAAjB,GAA8BhD,SAA9B,CAAwC,UAAAc,GAAG,EAAG;AAC5C,gBAAImC,OAAO,GAAG,EAAd;AACAA,mBAAO,GAAGnC,GAAG,CAACG,IAAd;AACA,kBAAI,CAACD,IAAL,GAAYiC,OAAO,CAACjC,IAApB;AACAL,wBAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAe,MAAI,CAACN,IAApB,CAA7B;AAED,WAND,EAOA,UAAAkC,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AAED,WAXD;AAYD;;;;;;;uBArBUH,gB,EAAgB,mI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,sJ;AAAA;AAAA;ACT7B;;AAA8D;;AAAO;;AAErE;;;;AAAK;;AAAA;;;;;;;;;sEDOQA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT7E,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AET7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaiF,iB;AAUX,iCAAoBnE,eAApB,EACoBD,YADpB,EAEoBiD,WAFpB,EAGoBC,MAHpB,EAGoC;AAAA;;AAHhB,aAAAjD,eAAA,GAAAA,eAAA;AACA,aAAAD,YAAA,GAAAA,YAAA;AACA,aAAAiD,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE5B,CACV;;;2CAEe;AAAA;;AACd,cAAMnB,IAAI,GAAG;AACXsC,gBAAI,EAAE,KAAKA,IADA;AAEXC,iBAAK,EAAE,KAAKA,KAFD;AAGX1C,oBAAQ,EAAE,KAAKA,QAHJ;AAIXuB,oBAAQ,EAAE,KAAKA,QAJJ;AAKXlB,qBAAS,EAAE;AALA,WAAb;;AAQA,cAAI,CAAC,KAAKhC,eAAL,CAAqBsE,gBAArB,CAAsCxC,IAAtC,CAAL,EAAkD;AAEhD,iBAAK/B,YAAL,CAAkBW,IAAlB,CAAuB,0BAAvB,EAAmD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAE;AAApC,aAAnD;AAEA,mBAAO,KAAP;AACD;;AAED,cAAI,CAAC,KAAKZ,eAAL,CAAqBuE,aAArB,CAAmCzC,IAAI,CAACuC,KAAxC,CAAL,EAAqD;AACnD,iBAAKtE,YAAL,CAAkBW,IAAlB,CAAuB,0BAAvB,EAAmD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAE;AAApC,aAAnD;AACA,mBAAO,KAAP;AACD,WAnBa,CAqBd;;;AACA,eAAKoC,WAAL,CAAiBwB,YAAjB,CAA8B1C,IAA9B,EAAoChB,SAApC,CAA8C,UAAAC,IAAI,EAAI;AACpD,gBAAKA,IAAI,IAAI,IAAb,EAAmB;AACjB,oBAAI,CAAChB,YAAL,CAAkBW,IAAlB,CAAuB,sCAAvB,EAA+D;AAACC,wBAAQ,EAAE,eAAX;AAA4BC,uBAAO,EAAE;AAArC,eAA/D;;AACA,oBAAI,CAACqC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD,aAHD,MAGO;AACL,oBAAI,CAACtD,YAAL,CAAkBW,IAAlB,CAAuB,sBAAvB,EAA+C;AAACC,wBAAQ,EAAE,cAAX;AAA2BC,uBAAO,EAAE;AAApC,eAA/C;;AACA,oBAAI,CAACqC,MAAL,CAAYI,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,WARD;AAYD;;;;;;;uBApDUc,iB,EAAiB,2I,EAAA,6I,EAAA,mI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,ilB;AAAA;AAAA;ACb9B;;AAA8D;;AAAQ;;AACtE;;AAAM;AAAA,mBAAY,IAAAM,gBAAA,EAAZ;AAA8B,WAA9B;;AACF;;AACE;;AAAO;;AAAI;;AACX;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACI;;AAAQ;;AAAa;;AACrB;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACA;;AACI;;AAAO;;AAAQ;;AACf;;AAAO;AAAA;AAAA;;AAAP;;AACJ;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AAA8C;;AAAM;;AACtD;;;;AAfW;;AAAA;;AAIE;;AAAA;;AAIA;;AAAA;;AAIF;;AAAA;;;;;;;;;sEDHAN,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnF,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQawF,S;AAEX,yBAAoB1B,WAApB,EAAqDC,MAArD,EAAkE;AAAA;;AAA9C,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAEpD;;;;sCACU;AACT,cAAI,KAAKD,WAAL,CAAiB2B,QAAjB,EAAJ,EAAiC;AAC/B,mBAAO,IAAP;AACH,WAFC,MAEI;AACF,iBAAK1B,MAAL,CAAYI,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,mBAAO,KAAP;AACH;AAEA;;;;;;;uBAbUqB,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVE,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,W;AAIX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;qCAE5BhD,I,EAAM;AACjB,cAAMiD,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,sCAAf,EAAuDnD,IAAvD,EAA6D;AAClEiD,mBAAO,EAAEA,OADyD;AAElEG,mBAAO,EAAE;AAFyD,WAA7D,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAKD;;;yCAEgBE,I,EAAI;AACnB,cAAMiD,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,0CAAf,EAA2DnD,IAA3D,EAAiE;AACtEiD,mBAAO,EAAEA,OAD6D;AAEtEG,mBAAO,EAAE;AAF6D,WAAjE,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAID;;;sCAGa2B,K,EAAOzB,I,EAAM;AACzB,eAAKsD,SAAL,GAAiB7B,KAAjB;AACA,eAAKzB,IAAL,GAAYA,IAAZ;AACAL,sBAAY,CAACU,OAAb,CAAqB,OAArB,EAA6BoB,KAA7B;AACA9B,sBAAY,CAACU,OAAb,CAAqB,YAArB,EAAkCZ,IAAI,CAACa,SAAL,CAAeN,IAAf,CAAlC;AAED;;;gCAEOuD,Q,EAAQ;AACd,cAAMN,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKF,IAAL,CAAUQ,GAAV,CAAc,mBAAiBD,QAA/B,EAAyC;AAC9CN,mBAAO,EAAEA,OADqC;AAE9CG,mBAAO,EAAE;AAFqC,WAAzC,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAID;;;oCAGW;AACV,cAAM2B,KAAK,GAAG9B,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,eAAK0D,SAAL,GAAiB7B,KAAjB;AACD;;;iCAEQ;AACP,eAAK6B,SAAL,GAAiB,IAAjB;AACA,eAAKtD,IAAL,GAAY,IAAZ;AACAL,sBAAY,CAAC8D,KAAb;AACD;;;qCAES;AACR,eAAKC,SAAL;AACA,cAAMT,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,4BAAgB,kBADc;AAE9BU,yBAAa,EAAE,KAAKL;AAFU,WAAhB,CAAhB,CAFQ,CAOT;;AACC,iBAAO,KAAKN,IAAL,CAAUQ,GAAV,CAAc,eAAd,EAA+B;AACpCP,mBAAO,EAAPA,OADoC;AAEpCG,mBAAO,EAAE;AAF2B,WAA/B,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAID;;;mCAEO;AACN,cAAI8D,SAAS,GAAG,IAAI,mEAAJ,EAAhB;;AACA,cAAGjE,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiCiE,SAApC,EAA8C;AAC5C,mBAAO,KAAP;AACD;;AACD,iBAAO,CAACD,SAAS,CAACE,cAAV,CAAyBnE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAzB,CAAR;AACD,S,CAED;AACA;;;;kCACO;AACL,cAAGD,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,IAAhC,IAAuCD,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgCiE,SAA1E,EAAqF;AACnF,mBAAOpE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCO,QAAhD;AACD,WAFD,MAII;AACF,mBAAO,IAAP;AACD;AACF;;;;;;;uBAvFU4C,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiB,U;AAEX,0BAAoBf,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;kCAE/BnC,W,EAAavC,Q,EAAQ;AAC7B,cAAM2E,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKF,IAAL,WAAiB,iBAAenC,WAAf,GAA2B,GAA3B,GAA+BvC,QAAhD,EAA0D;AAC/D2E,mBAAO,EAAEA,OADsD;AAE/DG,mBAAO,EAAE;AAFsD,WAA1D,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAMD;;;kCAESY,M,EAAM;AACd,cAAM6C,QAAQ,GAAG9D,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,QAA1D;AACA,cAAMoD,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKF,IAAL,CAAUgB,GAAV,CAAc,iBAAeT,QAA7B,EAAsC7C,MAAtC,EAA8C;AACnDuC,mBAAO,EAAEA,OAD0C;AAEnDG,mBAAO,EAAE;AAF0C,WAA9C,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAKD;;;+BAEMmE,S,EAAS;AACd,cAAMV,QAAQ,GAAG9D,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,QAA1D;AACA,cAAMoD,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,cAAYI,QAA3B,EAAoCU,SAApC,EAA+C;AACpDhB,mBAAO,EAAEA,OAD2C;AAEpDG,mBAAO,EAAE;AAF2C,WAA/C,EAGJC,IAHI,CAGC,2DAAI,UAACvD,GAAD;AAAA,mBAA6BA,GAA7B;AAAA,WAAJ,CAHD,CAAP;AAID;;;;;;;uBAlCUiE,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVjB,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACPvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaoB,e;AAEX,iCAAc;AAAA;AAAG;;;;yCAEAlE,I,EAAI;AACnB,cAAIA,IAAI,CAACsC,IAAL,KAAcuB,SAAd,IAA2B7D,IAAI,CAACuC,KAAL,KAAesB,SAA1C,IAAuD7D,IAAI,CAACH,QAAL,KAAkBgE,SAAzE,IAAsF7D,IAAI,CAACoB,QAAL,KAAkByC,SAA5G,EAAsH;AACpH,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;sCAEatB,K,EAAK;AAEjB;AACA,cAAM4B,EAAE,GAAG,yJAAX;AACA,iBAAOA,EAAE,CAACC,IAAH,CAAQ7B,KAAR,CAAP;AACD;;;oCAEWnE,G,EAAG;AACb,cAAIA,GAAG,CAACC,OAAJ,KAAgBwF,SAAhB,IAA6BzF,GAAG,CAACE,QAAJ,KAAiBuF,SAAlD,EAA6D;AAC3D,mBAAO,KAAP;AACD,WAFD,MAGI;AACF,mBAAO,IAAP;AACD;AAEF;;;;;;;uBA3BUK,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVpB,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMuB,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAArC,GAAG;AAAA,aAAIC,OAAO,CAACqC,KAAR,CAActC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n  \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { CompanyAddComponent } from './components/company-add/company-add.component';\nimport { CompanyListComponent } from './components/company-list/company-list.component';\nimport {HttpClientModule, HttpHeaders} from '@angular/common/http';\nimport {ValidateService} from './services/validate.service';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\nimport {AuthService} from './services/auth.service';\nimport {JobService} from './services/job.service';\nimport {AuthGuard} from './guards/auth.guard';\nimport {AccordionModule} from 'primeng/accordion';     //accordion and accordion tab\nimport {MenuItem} from 'primeng/api';  \nimport {TableModule} from 'primeng/table';                //api\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ButtonModule} from 'primeng/button';\nimport {DialogModule} from 'primeng/dialog';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {RadioButtonModule} from 'primeng/radiobutton';\n\nconst appRoutes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'profile', component: ProfileComponent,canActivate: [AuthGuard] },\n  {path: 'register', component: RegisterComponent },\n  {path: 'company-add', component: CompanyAddComponent, canActivate: [AuthGuard]  },\n  {path: 'company-list', component: CompanyListComponent, canActivate: [AuthGuard]  }\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    CompanyAddComponent,\n    CompanyListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpClientModule,\n    FlashMessagesModule.forRoot(),\n    AccordionModule,\n    BrowserAnimationsModule,\n    TableModule,\n    ButtonModule,\n    DialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    RadioButtonModule\n    \n    \n  ],\n  providers: [ValidateService, AuthService, AuthGuard,JobService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {JobService} from '../../services/job.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {ValidateService} from '../../services/validate.service';\nimport { SelectItem } from 'primeng/api/selectitem';\n\n\n\n@Component({\n  selector: 'app-company-add',\n  templateUrl: './company-add.component.html',\n  styleUrls: ['./company-add.component.css']\n})\nexport class CompanyAddComponent implements OnInit {\n\n  company:String\n  jobTitle:String\n  location:String\n  notes:String\n  link:String\n  selectedStatus: String = 'Pending';\n\n  constructor(private jobService:JobService, \n              private flashMessage:FlashMessagesService,\n              private validateService: ValidateService) { }\n\n  ngOnInit() {\n  \n  }\n\n  onJobSubmit(){\n    const job = {\n      company : this.company,\n      jobTitle: this.jobTitle,\n      location: this.location,\n      notes: this.notes,\n      link: this.link,\n      status: this.selectedStatus\n\n    }\n    if (!this.validateService.validateJob(job)) {\n\n      this.flashMessage.show('Must fill in company and a job title', {cssClass: 'alert-danger', timeout: 3000});\n\n      return false;\n    }\n\n    this.jobService.addJob(job).subscribe(data =>{\n      \n      if ( data != null) {\n        this.flashMessage.show('Successfully added a job', {cssClass: 'alert-success', timeout: 3000});\n      \n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        \n      }\n\n\n    })\n    \n    \n  }\n\n}\n","\n<h1 class=\"page-header display-1\" style=\"text-align: center;\">Add a new job</h1>\n<form (submit) = \"onJobSubmit()\">\n    <div class=\"form-group\">\n      <label>Company</label>\n      <input [(ngModel)] =\"company\" type=\"text\" class=\"form-control\"  name=\"company\">\n    </div>\n    <div class=\"form-group\">\n        <label >Job Title</label>\n        <input [(ngModel)] = \"jobTitle\" type=\"text\" class=\"form-control\" name =\"jobTitle\">\n    </div>\n    <div class=\"form-group\">\n        <label>Location</label>\n        <input [(ngModel)] =\"location\" type=\"text\" class=\"form-control\"  name=\"location\">\n    </div>\n    <div class=\"form-group\">\n      <label>Company Notes</label>\n      <textarea id=\"notes\" name =\"notes\" [(ngModel)]=\"notes\" class=\"form-control\" ></textarea>\n    </div>\n    <div class=\"form-group\">\n        <label>Link</label>\n        <input [(ngModel)] =\"link\" type=\"text\" class=\"form-control\"  name=\"link\">\n    </div>\n    <div class=\"form-group\">\n        <label>Status</label>\n        <div class=\"ui-g\" style=\"width:250px;margin-bottom:10px\">\n          <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Pending\" label=\"Pending\" [(ngModel)]=\"selectedStatus\" inputId=\"opt1\"></p-radioButton></div>\n          <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Rejected\" label=\"Rejected\" [(ngModel)]=\"selectedStatus\" inputId=\"opt2\"></p-radioButton></div>\n          <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"In Progress\" label=\"In Progress\" [(ngModel)]=\"selectedStatus\" inputId=\"opt3\"></p-radioButton></div>\n        </div>\n  \n    </div>\n    <button pButton icon=\"pi pi-plus\" type=\"submit\" class=\"btn btn-primary\" label= \"Add\"></button>\n    \n  </form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {JobService} from '../../services/job.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.css']\n})\n\n\nexport class CompanyListComponent implements OnInit{\n  \n  jobDetail : any;\n  selectedJob :any;\n  displayDialog : boolean;\n  jobs: any;\n  \n  \n\n  constructor(private authservice: AuthService,\n              private flashMessage: FlashMessagesService,\n              private jobService: JobService) { }\n\n  ngOnInit() {\n    if( this.jobs = this.authservice.getJobs() ){\n      this.updateUser()\n    } else {\n      this.flashMessage.show('Company List is not Loading Properly',{cssClass: 'alert-danger', timeout: 6000})\n    }\n  }\n\n  //Used to update user object everytime an event happens so data shown can be accurate\n  updateUser(){\n    this.authservice.getUser(JSON.parse(localStorage.getItem('User')).username).subscribe(res =>{\n      let obj = {} as any;\n      let user = {} as any\n      obj = res.body\n      user = obj.user\n      user.numOfJobs = user.jobsList.length\n      localStorage.setItem('User', JSON.stringify(user));\n      this.jobs = user.jobsList\n    })\n  }\n\n  refresh(){\n    \n    this.jobDetail = {}\n    this.flashMessage.show('Table refreshed!',{cssClass: 'alert-success', timeout: 1000});\n    this.updateUser();\n  }\n\n  onRowSelect(event){\n    this.jobDetail = event.data\n    this.displayDialog = true;\n    this.updateUser();\n    \n  }\n\n\n  \n\n\n  save(){\n    const newJob = this.selectedJob\n    this.jobService.updateJob(newJob).subscribe()\n    this.displayDialog = false;\n    this.updateUser();\n    \n\n    \n  }\n  delete(){\n    const companyName = this.selectedJob.company\n    const jobTitle = this.selectedJob.jobTitle\n    this.jobService.deleteJob(companyName,jobTitle).subscribe();\n    this.displayDialog = false;\n    this.updateUser();\n  }\n\n\n}\n","<div style=\"margin-top: 50px;\">\n<p-table [value] = \"this.jobs\" (onRowSelect) =\"onRowSelect($event)\" selectionMode =\"single\" [(selection)] =\"selectedJob\" pagination =\"true\" [rows] = 5>\n  <ng-template pTemplate =\"caption\">\n    List of Jobs\n  </ng-template>\n  <ng-template pTemplate =\"header\">\n    <tr>\n      <th>Company</th>\n      <th>Job Title</th>\n      <th>Location</th>\n      <th>Notes</th>\n      <th>Status</th>\n      <th>Link</th>\n  </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-job>\n    <tr [pSelectableRow]=\"job\">\n      <td>{{job.company}}</td>\n      <td>{{job.jobTitle}}</td>\n      <td>{{job.location}}</td>\n      <td>{{job.notes}}</td>\n      <td>{{job.status}}</td>\n      <td>{{job.link}}</td>\n    </tr>\n</ng-template>\n<ng-template pTemplate=\"summary\" let-job>\n  <div style=\"text-align:left\">\n      <button type=\"button\" pButton icon=\"pi pi-refresh\" (click)=\"refresh()\" label=\"Refresh\"></button>\n  </div>\n</ng-template>    \n</p-table>\n</div>\n\n\n  <p-dialog  header =\"Job Details\"  [(visible)] = \"displayDialog\" [focusOnShow] = \"false\" [responsive] = \"true\"showEffect=\"fade\" [modal]=\"true\"  [style]=\"{width: '400px'}\">\n    <div class=\"ui-g ui-fluid\" *ngIf=\"jobDetail\">\n      <div class=\"ui-g-12\">\n            <div class=\"ui-g-4\">\n                <label for=\"company\">Company</label>\n            </div>\n            <div class=\"ui-g-8\">\n                <input pInputText id=\"company\" [(ngModel)]=\"jobDetail.company\" autofocus disabled/>\n            </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Job Title</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <input pInputText id=\"jobTitle\" [(ngModel)]=\"jobDetail.jobTitle\" autofocus disabled />\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Location</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <input pInputText id=\"location\" [(ngModel)]=\"jobDetail.location\" autofocus />\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Notes</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <textarea pInputTextarea id=\"notes\" [(ngModel)]=\"jobDetail.notes\" autofocus ></textarea>\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Link</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <input pInputText id=\"link\" [(ngModel)]=\"jobDetail.link\" autofocus />\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Status</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Pending\" label=\"Pending\" [(ngModel)]=\"jobDetail.status\" inputId=\"opt1\"></p-radioButton></div>\n              <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Rejected\" label=\"Rejected\" [(ngModel)]=\"jobDetail.status\" inputId=\"opt2\"></p-radioButton></div>\n              <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"In Progress\" label=\"In Progress\" [(ngModel)]=\"jobDetail.status\" inputId=\"opt3\"></p-radioButton></div>\n          </div>\n        </div>\n\n    </div>\n    <p-footer>\n      <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n          <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"delete()\" label=\"Delete\"></button>\n          <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"save()\" label=\"Save\"></button>\n      </div>\n    </p-footer>\n    \n\n  </p-dialog>\n\n\n\n\n\n\n\n\n<!-- <h3 class=\"first\">Basic</h3> \n<p-table [value]=\"jobs\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Company</th>\n            <th>Job Title</th>\n            <th>Location</th>\n            <th>Notes</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-job>\n        <tr>\n            <td>{{job.company}}</td>\n            <td>{{job.jobTitle}}</td>\n            <td>{{job.location}}</td>\n            <td>{{job.notes}}</td>\n        </tr>\n    </ng-template>\n</p-table>\n-->","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    \n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(res =>{\n      let data ={} as any;\n      data = res.body;\n      \n      if(data.success){\n        \n        this.router.navigate(['/profile']);\n        this.authService.storeUserData(data.token,data.user);\n        this.flashMessage.show(data.msg.toString(),{cssClass: 'alert-success', timeout: 3000} )\n      \n\n      }\n      else{\n        this.flashMessage.show(data.msg.toString(),{cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['']);\n      }\n      \n\n    })\n\n    \n\n  }\n\n}\n","\n<h1 class=\"page-header display-1\" style =\"text-align: center; \">Login</h1>\n<form (submit) = \"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input [(ngModel)] =\"username\" type=\"text\" class=\"form-control\"  name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input [(ngModel)] =\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">JobHunt</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExample03\">\n      <ul class=\"navbar-nav  mr-auto\">\n        <li  *ngIf = \"!this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/']\" class=\"nav-link\" href=\"#\">Login <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li  *ngIf = \"!this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/register']\" class=\"nav-link\" href=\"#\">Register</a>\n        </li>\n        <li  *ngIf = \"this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/profile']\" class=\"nav-link\" href=\"#\">Profile</a>\n        </li>\n        <li  *ngIf = \"this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/company-add']\" class=\"nav-link\" href=\"#\">Add</a>\n      </li>\n        <li  *ngIf = \"this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n            <a [routerLink] = \"['/company-list']\" class=\"nav-link\" href=\"#\">Table</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav nav navbar-right\">\n        <li *ngIf = \"this.authService.loggedIn()\">\n            <a (click) = \"onLogoutClick()\" class=\"nav-link\" href=\"#\">Logout</a>\n        </li>\n     </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n  \n  constructor(private authservice: AuthService) { }\n\n  ngOnInit() {\n\n    \n    this.authservice.getProfile().subscribe(res =>{\n      let profile = {} as any;\n      profile = res.body;\n      this.user = profile.user;\n      localStorage.setItem('User', JSON.stringify(this.user));\n      \n    },\n    err => {\n      console.log(err);\n      return false;\n\n    })\n  }\n\n\n  }\n","<h1 class=\"page-header display-1\" style=\"text-align: center;\">Profile</h1>\n\n<div *ngIf = \"this.user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\n        <li class=\"list-group-item\">Number of jobs applied to : {{user.numOfJobs}}</li>\n        \n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  email: String; \n  username: String;\n  password: String;\n  numOfjobs: Number;\n  jobsList: Array<Object>;\n\n\n  constructor(private validateService: ValidateService,\n              private flashMessage: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      numOfJobs: 0\n    }\n\n    if (!this.validateService.validateRegister(user)) {\n\n      this.flashMessage.show('Please Fill in all field', {cssClass: 'alert-danger', timeout: 3000});\n\n      return false;\n    }\n\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show('Please use a valid Email', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Regiser User\n    this.authService.registerUser(user).subscribe(data => {\n      if ( data != null) {\n        this.flashMessage.show('You are now registered and can login', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n\n\n    \n  }\n\n}\n","<h1 class=\"page-header display-1\" style=\"text-align: center;\">Register</h1>\n<form (submit) = \"onRegisterSubmit()\">\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input [(ngModel)] =\"name\" type=\"text\" class=\"form-control\"  name=\"name\">\n    </div>\n    <div class=\"form-group\">\n        <label >Email address</label>\n        <input [(ngModel)] = \"email\" type=\"email\" class=\"form-control\" name =\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input [(ngModel)] =\"username\" type=\"text\" class=\"form-control\"  name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input [(ngModel)] =\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router,ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService:AuthService, private router:Router){\n\n  }\n  canActivate( ) {\n    if (this.authService.loggedIn()) {\n      return true;\n  } else{\n      this.router.navigate(['']);\n      return false;\n  }\n    \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken : any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n  }\n\n  authenticateUser(user){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n\n  storeUserData(token, user) {\n    this.authToken = token;\n    this.user = user;\n    localStorage.setItem('Token',token);\n    localStorage.setItem('UserObject',JSON.stringify(user));\n\n  }\n\n  getUser(userName){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('users/getuser/'+userName, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n\n  loadToken() {\n    const token = localStorage.getItem('Token');\n    this.authToken = token;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  getProfile(){\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.authToken\n\n    });\n   // headers.append('Authorization', this.authToken);\n    return this.http.get('users/profile', {\n      headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n  loggedIn(){\n    let jwtHelper = new JwtHelperService();\n    if(localStorage.getItem('Token') == undefined){\n      return false;\n    }\n    return !jwtHelper.isTokenExpired(localStorage.getItem('Token'));\n  }\n\n  // This method gets all jobs that are attached to the user object is stored in localStorage after authenication was succesful\n  // in profile.component.ts \n  getJobs(){\n    if(localStorage.getItem('User') != null ||localStorage.getItem('User') != undefined ){\n      return JSON.parse(localStorage.getItem('User')).jobsList;\n    }\n\n    else{\n      return null;\n    }\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  constructor(private http: HttpClient) { }\n\n  deleteJob(companyName, jobTitle){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.delete('jobs/delete/'+companyName+'&'+jobTitle, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n\n  }\n\n  updateJob(newJob){\n    const userName = JSON.parse(localStorage.getItem('User')).username;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('jobs/update/'+userName,newJob, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n  }\n\n  addJob(jobObject){\n    const userName = JSON.parse(localStorage.getItem('User')).username;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('jobs/add/'+userName,jobObject, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if (user.name === undefined || user.email === undefined || user.username === undefined || user.password === undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n\n    // tslint:disable-next-line: max-line-length\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  validateJob(job){\n    if (job.company === undefined || job.jobTitle === undefined ){\n      return false;\n    } \n    else{ \n      return true\n    }\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}