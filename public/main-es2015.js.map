{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/company-add/company-add.component.ts","./src/app/components/company-add/company-add.component.html","./src/app/components/company-list/company-list.component.ts","./src/app/components/company-list/company-list.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/job.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n  \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { CompanyAddComponent } from './components/company-add/company-add.component';\nimport { CompanyListComponent } from './components/company-list/company-list.component';\nimport {HttpClientModule, HttpHeaders} from '@angular/common/http';\nimport {ValidateService} from './services/validate.service';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\nimport {AuthService} from './services/auth.service';\nimport {JobService} from './services/job.service';\nimport {AuthGuard} from './guards/auth.guard';\nimport {AccordionModule} from 'primeng/accordion';     //accordion and accordion tab\nimport {MenuItem} from 'primeng/api';  \nimport {TableModule} from 'primeng/table';                //api\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ButtonModule} from 'primeng/button';\nimport {DialogModule} from 'primeng/dialog';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {RadioButtonModule} from 'primeng/radiobutton';\n\nconst appRoutes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'profile', component: ProfileComponent,canActivate: [AuthGuard] },\n  {path: 'register', component: RegisterComponent },\n  {path: 'company-add', component: CompanyAddComponent, canActivate: [AuthGuard]  },\n  {path: 'company-list', component: CompanyListComponent, canActivate: [AuthGuard]  }\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    CompanyAddComponent,\n    CompanyListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpClientModule,\n    FlashMessagesModule.forRoot(),\n    AccordionModule,\n    BrowserAnimationsModule,\n    TableModule,\n    ButtonModule,\n    DialogModule,\n    InputTextareaModule,\n    DropdownModule,\n    RadioButtonModule\n    \n    \n  ],\n  providers: [ValidateService, AuthService, AuthGuard,JobService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {JobService} from '../../services/job.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {ValidateService} from '../../services/validate.service';\nimport { SelectItem } from 'primeng/api/selectitem';\n\n\n\n@Component({\n  selector: 'app-company-add',\n  templateUrl: './company-add.component.html',\n  styleUrls: ['./company-add.component.css']\n})\nexport class CompanyAddComponent implements OnInit {\n\n  company:String\n  jobTitle:String\n  location:String\n  notes:String\n  link:String\n  selectedStatus: String = 'Pending';\n\n  constructor(private jobService:JobService, \n              private flashMessage:FlashMessagesService,\n              private validateService: ValidateService) { }\n\n  ngOnInit() {\n  \n  }\n\n  onJobSubmit(){\n    const job = {\n      company : this.company,\n      jobTitle: this.jobTitle,\n      location: this.location,\n      notes: this.notes,\n      link: this.link,\n      status: this.selectedStatus\n\n    }\n    if (!this.validateService.validateJob(job)) {\n\n      this.flashMessage.show('Must fill in company and a job title', {cssClass: 'alert-danger', timeout: 3000});\n\n      return false;\n    }\n\n    this.jobService.addJob(job).subscribe(data =>{\n      \n      if ( data != null) {\n        this.flashMessage.show('Successfully added a job', {cssClass: 'alert-success', timeout: 3000});\n      \n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        \n      }\n\n\n    })\n    \n    \n  }\n\n}\n","\n<h1 class=\"page-header display-1\" style=\"text-align: center;\">Add a new job</h1>\n<form (submit) = \"onJobSubmit()\">\n    <div class=\"form-group\">\n      <label>Company</label>\n      <input [(ngModel)] =\"company\" type=\"text\" class=\"form-control\"  name=\"company\">\n    </div>\n    <div class=\"form-group\">\n        <label >Job Title</label>\n        <input [(ngModel)] = \"jobTitle\" type=\"text\" class=\"form-control\" name =\"jobTitle\">\n    </div>\n    <div class=\"form-group\">\n        <label>Location</label>\n        <input [(ngModel)] =\"location\" type=\"text\" class=\"form-control\"  name=\"location\">\n    </div>\n    <div class=\"form-group\">\n      <label>Company Notes</label>\n      <textarea id=\"notes\" name =\"notes\" [(ngModel)]=\"notes\" class=\"form-control\" ></textarea>\n    </div>\n    <div class=\"form-group\">\n        <label>Link</label>\n        <input [(ngModel)] =\"link\" type=\"text\" class=\"form-control\"  name=\"link\">\n    </div>\n    <div class=\"form-group\">\n        <label>Status</label>\n        <div class=\"ui-g\" style=\"width:250px;margin-bottom:10px\">\n          <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Pending\" label=\"Pending\" [(ngModel)]=\"selectedStatus\" inputId=\"opt1\"></p-radioButton></div>\n          <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Rejected\" label=\"Rejected\" [(ngModel)]=\"selectedStatus\" inputId=\"opt2\"></p-radioButton></div>\n          <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"In Progress\" label=\"In Progress\" [(ngModel)]=\"selectedStatus\" inputId=\"opt3\"></p-radioButton></div>\n        </div>\n  \n    </div>\n    <button pButton icon=\"pi pi-plus\" type=\"submit\" class=\"btn btn-primary\" label= \"Add\"></button>\n    \n  </form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {JobService} from '../../services/job.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.css']\n})\n\n\nexport class CompanyListComponent implements OnInit{\n  \n  jobDetail : any;\n  selectedJob :any;\n  displayDialog : boolean;\n  jobs: any;\n  \n  \n\n  constructor(private authservice: AuthService,\n              private flashMessage: FlashMessagesService,\n              private jobService: JobService) { }\n\n  ngOnInit() {\n    if( this.jobs = this.authservice.getJobs() ){\n      this.updateUser()\n    } else {\n      this.flashMessage.show('Company List is not Loading Properly',{cssClass: 'alert-danger', timeout: 6000})\n    }\n  }\n\n  //Used to update user object everytime an event happens so data shown can be accurate\n  updateUser(){\n    this.authservice.getUser(JSON.parse(localStorage.getItem('User')).username).subscribe(res =>{\n      let obj = {} as any;\n      let user = {} as any\n      obj = res.body\n      user = obj.user\n      user.numOfJobs = user.jobsList.length\n      localStorage.setItem('User', JSON.stringify(user));\n      this.jobs = user.jobsList\n    })\n  }\n\n  refresh(){\n    \n    this.jobDetail = {}\n    this.flashMessage.show('Table refreshed!',{cssClass: 'alert-success', timeout: 1000});\n    this.updateUser();\n  }\n\n  onRowSelect(event){\n    this.jobDetail = event.data\n    this.displayDialog = true;\n    this.updateUser();\n    \n  }\n\n\n  \n\n\n  save(){\n    const newJob = this.selectedJob\n    this.jobService.updateJob(newJob).subscribe()\n    this.displayDialog = false;\n    this.updateUser();\n    \n\n    \n  }\n  delete(){\n    const companyName = this.selectedJob.company\n    const jobTitle = this.selectedJob.jobTitle\n    this.jobService.deleteJob(companyName,jobTitle).subscribe();\n    this.displayDialog = false;\n    this.updateUser();\n  }\n\n\n}\n","<div style=\"margin-top: 50px;\">\n<p-table [value] = \"this.jobs\" (onRowSelect) =\"onRowSelect($event)\" selectionMode =\"single\" [(selection)] =\"selectedJob\" pagination =\"true\" [rows] = 5 [responsive] = true>\n  <ng-template pTemplate =\"caption\">\n    List of Jobs\n  </ng-template>\n  <ng-template pTemplate =\"header\">\n    <tr>\n      <th>Company</th>\n      <th>Job Title</th>\n      <th>Notes</th>\n      <th>Status</th>\n    \n  </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-job>\n    <tr [pSelectableRow]=\"job\">\n      <td>{{job.company}}</td>\n      <td>{{job.jobTitle}}</td>\n      <td>{{job.notes}}</td>\n      <td>{{job.status}}</td>\n    </tr>\n</ng-template>\n<ng-template pTemplate=\"summary\" let-job>\n  <div style=\"text-align:left\">\n      <button type=\"button\" pButton icon=\"pi pi-refresh\" (click)=\"refresh()\" label=\"Refresh\"></button>\n  </div>\n</ng-template>    \n</p-table>\n</div>\n\n\n  <p-dialog  header =\"Job Details\"  [(visible)] = \"displayDialog\" [focusOnShow] = \"false\" [responsive] = \"true\" showEffect=\"fade\" [modal]=\"true\"  >\n    <div class=\"ui-g ui-fluid\" *ngIf=\"jobDetail\">\n      <div class=\"ui-g-12\">\n            <div class=\"ui-g-4\">\n                <label for=\"company\">Company</label>\n            </div>\n            <div class=\"ui-g-8\">\n                <input pInputText id=\"company\" [(ngModel)]=\"jobDetail.company\" autofocus disabled/>\n            </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Job Title</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <input pInputText id=\"jobTitle\" [(ngModel)]=\"jobDetail.jobTitle\" autofocus disabled />\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Location</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <input pInputText id=\"location\" [(ngModel)]=\"jobDetail.location\" autofocus />\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Notes</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <textarea pInputTextarea id=\"notes\" [(ngModel)]=\"jobDetail.notes\" autofocus ></textarea>\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Link</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <input pInputText id=\"link\" [(ngModel)]=\"jobDetail.link\" autofocus />\n          </div>\n        </div>\n        <div class=\"ui-g-12\">\n          <div class=\"ui-g-4\">\n              <label for=\"company\">Status</label>\n          </div>\n          <div class=\"ui-g-8\">\n              <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Pending\" label=\"Pending\" [(ngModel)]=\"jobDetail.status\" inputId=\"opt1\"></p-radioButton></div>\n              <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"Rejected\" label=\"Rejected\" [(ngModel)]=\"jobDetail.status\" inputId=\"opt2\"></p-radioButton></div>\n              <div class=\"ui-g-12\"><p-radioButton name=\"group1\" value=\"In Progress\" label=\"In Progress\" [(ngModel)]=\"jobDetail.status\" inputId=\"opt3\"></p-radioButton></div>\n          </div>\n        </div>\n\n    </div>\n    <p-footer>\n      <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n          <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"delete()\" label=\"Delete\"></button>\n          <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"save()\" label=\"Save\"></button>\n      </div>\n    </p-footer>\n    \n\n  </p-dialog>\n\n\n\n\n\n\n\n\n<!-- <h3 class=\"first\">Basic</h3> \n<p-table [value]=\"jobs\">\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th>Company</th>\n            <th>Job Title</th>\n            <th>Location</th>\n            <th>Notes</th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-job>\n        <tr>\n            <td>{{job.company}}</td>\n            <td>{{job.jobTitle}}</td>\n            <td>{{job.location}}</td>\n            <td>{{job.notes}}</td>\n        </tr>\n    </ng-template>\n</p-table>\n-->","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  constructor(private authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    \n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(res =>{\n      let data ={} as any;\n      data = res.body;\n      \n      if(data.success){\n        \n        this.router.navigate(['/profile']);\n        this.authService.storeUserData(data.token,data.user);\n        this.flashMessage.show(data.msg.toString(),{cssClass: 'alert-success', timeout: 3000} )\n      \n\n      }\n      else{\n        this.flashMessage.show(data.msg.toString(),{cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['']);\n      }\n      \n\n    })\n\n    \n\n  }\n\n}\n","\n<h1 class=\"page-header display-1\" style =\"text-align: center; \">Login</h1>\n<form (submit) = \"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input [(ngModel)] =\"username\" type=\"text\" class=\"form-control\"  name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input [(ngModel)] =\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n              private router: Router,\n              private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">JobHunt</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExample03\">\n      <ul class=\"navbar-nav  mr-auto\">\n        <li  *ngIf = \"!this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/']\" class=\"nav-link\" href=\"#\">Login <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li  *ngIf = \"!this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/register']\" class=\"nav-link\" href=\"#\">Register</a>\n        </li>\n        <li  *ngIf = \"this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/profile']\" class=\"nav-link\" href=\"#\">Profile</a>\n        </li>\n        <li  *ngIf = \"this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n          <a [routerLink] = \"['/company-add']\" class=\"nav-link\" href=\"#\">Add</a>\n      </li>\n        <li  *ngIf = \"this.authService.loggedIn()\" class=\"nav-item\" [routerLinkActive] = \"['active']\" [routerLinkActiveOptions] =\"{exact:true}\">\n            <a [routerLink] = \"['/company-list']\" class=\"nav-link\" href=\"#\">Table</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav nav navbar-right\">\n        <li *ngIf = \"this.authService.loggedIn()\">\n            <a (click) = \"onLogoutClick()\" class=\"nav-link\" href=\"#\">Logout</a>\n        </li>\n     </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n  \n  constructor(private authservice: AuthService) { }\n\n  ngOnInit() {\n\n    \n    this.authservice.getProfile().subscribe(res =>{\n      let profile = {} as any;\n      profile = res.body;\n      this.user = profile.user;\n      localStorage.setItem('User', JSON.stringify(this.user));\n      \n    },\n    err => {\n      console.log(err);\n      return false;\n\n    })\n  }\n\n\n  }\n","<h1 class=\"page-header display-1\" style=\"text-align: center; margin-bottom: 60px;\">Profile</h1>\n\n<div *ngIf = \"this.user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username: {{user.username}}</li>\n        <li class=\"list-group-item\">Email: {{user.email}}</li>\n        <li class=\"list-group-item\">Number of jobs applied to : {{user.numOfJobs}}</li>\n        \n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  email: String; \n  username: String;\n  password: String;\n  numOfjobs: Number;\n  jobsList: Array<Object>;\n\n\n  constructor(private validateService: ValidateService,\n              private flashMessage: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      numOfJobs: 0\n    }\n\n    if (!this.validateService.validateRegister(user)) {\n\n      this.flashMessage.show('Please Fill in all field', {cssClass: 'alert-danger', timeout: 3000});\n\n      return false;\n    }\n\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show('Please use a valid Email', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // Regiser User\n    this.authService.registerUser(user).subscribe(data => {\n      if ( data != null) {\n        this.flashMessage.show('You are now registered and can login', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['']);\n      } else {\n        this.flashMessage.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      }\n    });\n\n\n    \n  }\n\n}\n","<h1 class=\"page-header display-1\" style=\"text-align: center;\">Register</h1>\n<form (submit) = \"onRegisterSubmit()\">\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input [(ngModel)] =\"name\" type=\"text\" class=\"form-control\"  name=\"name\">\n    </div>\n    <div class=\"form-group\">\n        <label >Email address</label>\n        <input [(ngModel)] = \"email\" type=\"email\" class=\"form-control\" name =\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input [(ngModel)] =\"username\" type=\"text\" class=\"form-control\"  name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input [(ngModel)] =\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router,ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService:AuthService, private router:Router){\n\n  }\n  canActivate( ) {\n    if (this.authService.loggedIn()) {\n      return true;\n  } else{\n      this.router.navigate(['']);\n      return false;\n  }\n    \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken : any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n  }\n\n  authenticateUser(user){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/authenticate',user, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n\n  storeUserData(token, user) {\n    this.authToken = token;\n    this.user = user;\n    localStorage.setItem('Token',token);\n    localStorage.setItem('UserObject',JSON.stringify(user));\n\n  }\n\n  getUser(userName){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('users/getuser/'+userName, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n\n  loadToken() {\n    const token = localStorage.getItem('Token');\n    this.authToken = token;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  getProfile(){\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.authToken\n\n    });\n   // headers.append('Authorization', this.authToken);\n    return this.http.get('users/profile', {\n      headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n  loggedIn(){\n    let jwtHelper = new JwtHelperService();\n    if(localStorage.getItem('Token') == undefined){\n      return false;\n    }\n    return !jwtHelper.isTokenExpired(localStorage.getItem('Token'));\n  }\n\n  // This method gets all jobs that are attached to the user object is stored in localStorage after authenication was succesful\n  // in profile.component.ts \n  getJobs(){\n    if(localStorage.getItem('User') != null ||localStorage.getItem('User') != undefined ){\n      return JSON.parse(localStorage.getItem('User')).jobsList;\n    }\n\n    else{\n      return null;\n    }\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  constructor(private http: HttpClient) { }\n\n  deleteJob(companyName, jobTitle){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.delete('jobs/delete/'+companyName+'&'+jobTitle, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n\n  }\n\n  updateJob(newJob){\n    const userName = JSON.parse(localStorage.getItem('User')).username;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('jobs/update/'+userName,newJob, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n  }\n\n  addJob(jobObject){\n    const userName = JSON.parse(localStorage.getItem('User')).username;\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('jobs/add/'+userName,jobObject, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if (user.name === undefined || user.email === undefined || user.username === undefined || user.password === undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n\n    // tslint:disable-next-line: max-line-length\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  validateJob(job){\n    if (job.company === undefined || job.jobTitle === undefined ){\n      return false;\n    } \n    else{ \n      return true\n    }\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}